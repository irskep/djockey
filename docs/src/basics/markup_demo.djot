# Markup demo

{tag=aside .warning}
:::
The details of this markup are likely to change, since Djockey is experimental.
:::

## Overriding HTML tags

Djot does not ([yet](https://github.com/jgm/djot/issues/240)) support arbitrary HTML tags in its input or output. Djockey works around this by postprocessing Djot's HTML output. Whenever you add a `tag=foo`{.language-plaintext} attribute, Djockey will replace the element's tag with the attribute's value.

{% can't use .dj-djot-demo for features that require the entire Djockey pipeline (yet) %}

Input:

```djot
{tag=details}
:::
[I'm from Mattel!]{tag=summary}
Well, I'm not really from Mattel. I'm actually from a smaller company that was purchased in a leveraged buyout.
:::
```

Output:

{tag=details}
:::
[I'm from Mattel!]{tag=summary}
Well, I'm not really from Mattel. I'm actually from a smaller company that was purchased in a leveraged buyout.
:::

## Asides

### Note

{.dj-djot-demo}
```
{tag=aside .note}
:::
Objects in mirror may be closer than they appear
:::
```

### Warning

{.dj-djot-demo}
```
{tag=aside .warning}
:::
Objects in mirror may be closer than they appear
:::
```

### Danger

{.dj-djot-demo}
```
{tag=aside .danger}
:::
Objects in mirror may be closer than they appear
:::
```